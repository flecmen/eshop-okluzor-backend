generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id           Int     @id @default(autoincrement())
  mesto        String
  ulice        String
  cislo_popis  String?
  cislo_orient String?
  psc          String
  branch       Branch?
  user         User?
}

model User {
  id          Int      @id @default(autoincrement())
  nazev_firmy String
  ico         String   @unique
  dic         String   @unique
  password    String
  email       String   @unique
  tel         String
  addressId   Int      @unique
  role        Role     @default(Customer)
  branch      Branch[]
  order       Order[]
  address     Address  @relation(fields: [addressId], references: [id])
}

model Branch {
  id        Int     @id @default(autoincrement())
  userId    Int
  email     String
  tel       String
  addressId Int     @unique
  address   Address @relation(fields: [addressId], references: [id])
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  Order     Order[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  image       Bytes
  products    Product[]
}

model Product {
  id                  Int            @id @default(autoincrement())
  category            Category       @relation(fields: [categoryId], references: [id])
  nazev               String
  vyrobce             String
  popis               String
  cena                Int
  obrazek             Bytes
  dph                 Int
  typ                 Typ
  //náplasťové
  pocet_kusu_v_baleni Int
  rozmery             String
  //látkové
  s_obrazkem          Boolean
  orientace           Orientace
  //přísavkové
  barva               Barva
  typ_prisavkove      Typ_prisavkove
  //oční krytí
  velikost            Velikost
  //other
  categoryId          Int
  Order_item          Order_item[]
}

model Order {
  id          Int          @id @default(autoincrement())
  userId      Int
  branchId    Int
  created_at  DateTime     @default(now())
  status      Order_status
  note        String
  branch      Branch       @relation(fields: [branchId], references: [id])
  user        User         @relation(fields: [userId], references: [id])
  order_items Order_item[]
}

model Order_item {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int     @default(0)
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])
}

enum Orientace {
  PRAVY
  LEVY
  UNI
}

enum Barva {
  PRIRODNI
  SVETLE_RUZOVA
  CERVENA
  FIALOVA
  MODRA
  ZELENA
  TYRKYSOVA
  ZLUTA
}

enum Typ {
  naplastovy
  latkovy
  prisavkovy
  ocni_kryti
}

enum Typ_prisavkove {
  A
  B
  C
}

enum Velikost {
  S
  L
}

enum Order_status {
  na_ceste
  odelsano
  dokonceno
}

enum Role {
  Customer
  Admin
}
